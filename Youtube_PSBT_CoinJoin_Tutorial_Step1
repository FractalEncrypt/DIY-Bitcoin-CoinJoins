PSBT Workflow
##Pre-Mix
##createrawtransaction with equal outputs in the desired CoinJoinAmount + Fee
##For this example, we're using an amount participants have all agreed, a desired equal output amounts of 0.0125 BTC
##We will do 2 series of PSBT CoinJoins, but you can do as many mixing rounds as you want. 

##To create the desired outputs, users must premix their random UTXOs into "pre-agreed upon equal amount UTXOs" 
##(to avoid unmixed change amounts. )
##Our Pre-Mix Round amount will be 0.01250650
##Our First Round output amount will be 0.01250325
##Our Second Round of mixing will use outputs of 0.125

##First we need to create 6 new addresses for the Pre-Mixed coins to be sent to.
##Copy/paste this command 6 times, paste results into address1 - address6

getnewaddress "" "bech32"


createrawtransaction \
'[{"txid": "txid1", "vout": vout1},
{"txid": "txid2", "vout": vout2},
{"txid": "txid3", "vout": vout3},
{"txid": "txid4", "vout": vout4}]' \
'{"address1": CoinJoinAmount,
"address2": CoinJoinAmount,
"address3": CoinJoinAmount,
"address4": CoinJoinAmount,
"address5": CoinJoinAmount2,
"address6": CoinJoinAmount2}'


##1. Createpsbt
##First we need to create 4 new addresses for the Pre-Mixed coins to be sent to.
##Copy/paste this command 4 times, paste results into address1 - address4

getnewaddress "" "bech32"

createpsbt \
'[{"txid": "txid1", "vout": vout1},
{"txid": "txid2", "vout": vout2},
{"txid": "txid3", "vout": vout3},
{"txid": "txid4", "vout": vout4}]' \
'{"address1": CoinJoin_Output,
"address2": CoinJoin_Output,
"address3": CoinJoin_Output,
"address4": CoinJoin_Output}'

##Place raw hex of PSBT_1 for above tx below

##Decodepsbt and double check 

###PSBT_2
##First we need to create 4 new addresses for the Pre-Mixed coins to be sent to.
##Copy/paste this command 4 times, paste results into address1 - address4

getnewaddress "" "bech32"

createpsbt \
'[{"txid": "txid1", "vout": vout1},
{"txid": "txid2", "vout": vout2},
{"txid": "txid3", "vout": vout3},
{"txid": "txid4", "vout": vout4}]' \
'{"address1": CoinJoinAmount,
"address2": CoinJoinAmount,
"address3": CoinJoinAmount,
"address4": CoinJoinAmount}'

##Place raw hex of pbst for above tx below

##2. Have individual users send their PSBTs to coordinator
##3. Coordinator uses joinpsbts to join the separate PSBTs into one
joinpsbts '["",""]'

##3a. Decodepsbt and double check fees (all the way at the bottom), if fees are too high, you messed something up
##4. Coordinator sends the joined PSBT back to each user to sign with walletprocesspsbt
walletprocesspsbt psbt_raw_hex
##walletprocessedpsbt from Wallet 1

##walletprocessedpsbt from Wallet 2


##5. Once all users have signed/processed the joined PSBT, coordinator uses combinepsbt.
combinepsbt '["",""]'
##6. Coordinator uses finalizepsbt and then transmits to the network using sendrawtransaction.
finalizepsbt psbt_raw_hex
##7 This outputs the raw transaction hex
sendrawtransaction Raw_Tx_Hex
